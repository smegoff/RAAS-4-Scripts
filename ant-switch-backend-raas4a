#!/usr/bin/env bash
# ant-switch-backend-usb.sh
# A KiwiSDR antenna‐switch backend for USB-serial relay boards
# Copy this into /root/pkgs/ant_switch/, then in your Kiwi admin UI select “usb” as the backend.

N_CH=8
VERSION=1.0

# Adjust to your USB-serial device and serial speed:
TTY="/dev/ttyUSB0"
BAUD=9600

# Initialize serial port:
configure_port() {
    stty -F "$TTY" "$BAUD" cs8 -cstopb -parenb -ixon -ixoff -echo
}

# Send a raw command (with CR) down the serial port:
.send() {
    printf "%s\r" "$1" > "$TTY"
}

AntSW_ShowBackend() {
    echo "usb‐serial relay v$VERSION  $N_CH channels  $TTY@$BAUD"
    echo "More info: adapt this script to your board’s protocol"
}

AntSW_GetAddress() {
    # not used for USB backends, but Kiwi expects something:
    echo "$TTY"
}

AntSW_SetAddress() {
    echo "Serial port set to: $1"
    TTY="$1"
}

AntSW_Initialize() {
    configure_port
}

AntSW_GroundAll() {
    # turn ALL channels off
    for i in $(seq 1 $N_CH); do
        .send "OFF $i"
    done
}

AntSW_SelectAntenna() {
    # deselect all then enable one
    AntSW_GroundAll
    .send "ON $1"
}

AntSW_AddAntenna() {
    # leave existing + add this one
    .send "ON $1"
}

AntSW_RemoveAntenna() {
    .send "OFF $1"
}

AntSW_ToggleAntenna() {
    .send "TOGGLE $1"
}

AntSW_ReportSelected() {
    # (boards vary—some can report state; many don’t)
    echo "Selected antenna state reporting not supported."
}

# If you need Kiwi to know “status”:
AntSW_ShowSelected() {
    AntSW_ReportSelected
}

# allow the script itself to be queried from the command line:
if [[ "${1,,}" == "show" ]]; then
    AntSW_ShowBackend
elif [[ "${1,,}" == "status" ]]; then
    AntSW_ShowSelected
else
    # nothing
    :
fi
